{"version":3,"sources":["scripts/app.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_appComponentsDisclosurePanelDisclosurePanelContainerDirective","_appComponentsDisclosurePanelDisclosurePanelTogglerDirective","_appComponentsDisclosurePanelDisclosurePanelRevealOnOpenDirective","_appComponentsDisclosurePanelDisclosurePanelRevealOnCloseDirective","_appComponentsDisclosurePanelDisclosurePanelRevealLinkGeneratorService","_appComponentsDisclosurePanelDisclosurePanelDefaultsProvider","_appComponentsDisclosurePanelDisclosurePanelOnOpenClassDirective","angular","directive","DisclosurePanelContainerDirective","DisclosurePanelTogglerDirective","DisclosurePanelRevealOnOpenDirective","DisclosurePanelRevealOnCloseDirective","DisclosurePanelOnOpenClassDirective","provider","DisclosurePanelDefaultsProvider","factory","disclosurePanelRevealLinkGeneratorService","_classCallCheck","instance","Constructor","TypeError","restrict","scope","isInitiallyOpen","controller","DisclosurePanelController","bindToController","controllerAs","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","$scope","$element","disclosurePanelDefaults","this","_isOpen","disclosurePanelController","_init","$inject","_this","isOpenWatcher","updateClass","onDestroy","removeWatcher","isOpen","$watch","$on","elem","addClass","openClass","removeClass","closeClass","$apply","get","set","newIsOpen","$log","link","element","attrs","clickHandler","toggle","destroy","debug","off","on","require","generateLinkFunction","transclude","$animate","conditionToDisplay","directiveName","$attr","disclosurePanelContainerCtrl","$transclude","watchActionGeneratorForDisclosurePanelReveal","watchAction","childScope","clone","newScope","document","createComment","block","enter","parent","previousElements","remove","$destroy","getBlockNodes","leave","then","nodes","node","endNode","blockNodes","undefined","nextSibling","slice","push","disclosurePanelCtrl","overrideDefaults","overrides","defaults","extend","$get","watch","dpOnOpenClass"],"mappings":"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","file":"scripts/app.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* global */\n\t'use strict';\n\n\tvar _appComponentsDisclosurePanelDisclosurePanelContainerDirective = __webpack_require__(1);\n\n\tvar _appComponentsDisclosurePanelDisclosurePanelTogglerDirective = __webpack_require__(2);\n\n\tvar _appComponentsDisclosurePanelDisclosurePanelRevealOnOpenDirective = __webpack_require__(3);\n\n\tvar _appComponentsDisclosurePanelDisclosurePanelRevealOnCloseDirective = __webpack_require__(4);\n\n\tvar _appComponentsDisclosurePanelDisclosurePanelRevealLinkGeneratorService = __webpack_require__(5);\n\n\tvar _appComponentsDisclosurePanelDisclosurePanelDefaultsProvider = __webpack_require__(6);\n\n\tvar _appComponentsDisclosurePanelDisclosurePanelOnOpenClassDirective = __webpack_require__(7);\n\n\tangular.module('disclosurePanel', ['ngAnimate']).directive('dpContainer', _appComponentsDisclosurePanelDisclosurePanelContainerDirective.DisclosurePanelContainerDirective).directive('dpToggler', _appComponentsDisclosurePanelDisclosurePanelTogglerDirective.DisclosurePanelTogglerDirective).directive('dpRevealOnOpen', _appComponentsDisclosurePanelDisclosurePanelRevealOnOpenDirective.DisclosurePanelRevealOnOpenDirective).directive('dpRevealOnClose', _appComponentsDisclosurePanelDisclosurePanelRevealOnCloseDirective.DisclosurePanelRevealOnCloseDirective).directive('dpOnOpenClass', _appComponentsDisclosurePanelDisclosurePanelOnOpenClassDirective.DisclosurePanelOnOpenClassDirective).provider('disclosurePanelDefaults', _appComponentsDisclosurePanelDisclosurePanelDefaultsProvider.DisclosurePanelDefaultsProvider).factory('disclosurePanelRevealLinkGeneratorService', _appComponentsDisclosurePanelDisclosurePanelRevealLinkGeneratorService.disclosurePanelRevealLinkGeneratorService);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * @ngdoc directive\r\n\t * @name dpContainer\r\n\t * \r\n\t * @description\r\n\t * The directive that stores the disclosure panel.\r\n\t */\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\texports.DisclosurePanelContainerDirective = DisclosurePanelContainerDirective;\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n\tfunction DisclosurePanelContainerDirective() {\n\t  'ngInject';\n\n\t  var directive = {\n\t    restrict: 'A',\n\t    scope: {\n\t      isInitiallyOpen: \"=\"\n\t    },\n\t    controller: DisclosurePanelController,\n\t    bindToController: true,\n\t    controllerAs: 'disclosurePanelController'\n\t  };\n\n\t  return directive;\n\t}\n\n\tvar DisclosurePanelController = (function () {\n\t  function DisclosurePanelController($scope, $element, disclosurePanelDefaults) {\n\t    'ngInject';\n\n\t    _classCallCheck(this, DisclosurePanelController);\n\n\t    this._isOpen = $scope.disclosurePanelController.isInitiallyOpen;\n\t    this.$scope = $scope;\n\t    this.$element = $element;\n\t    this.disclosurePanelDefaults = disclosurePanelDefaults;\n\t    this._init();\n\t  }\n\t  DisclosurePanelController.$inject = [\"$scope\", \"$element\", \"disclosurePanelDefaults\"];\n\n\t  _createClass(DisclosurePanelController, [{\n\t    key: '_init',\n\t    value: function _init() {\n\t      var _this = this;\n\n\t      var isOpenWatcher = function isOpenWatcher() {\n\t        _this.updateClass(_this.$element);\n\t      };\n\n\t      var onDestroy = function onDestroy() {\n\t        _this.removeWatcher();\n\t      };\n\n\t      isOpenWatcher(this.isOpen);\n\t      this.removeWatcher = this.$scope.$watch('disclosurePanelController.isOpen', isOpenWatcher);\n\t      this.$scope.$on('$destroy', onDestroy);\n\t    }\n\t  }, {\n\t    key: 'updateClass',\n\t    value: function updateClass(elem) {\n\t      if (this.isOpen) {\n\t        elem.addClass(this.disclosurePanelDefaults.openClass);\n\t        elem.removeClass(this.disclosurePanelDefaults.closeClass);\n\t      } else {\n\t        elem.removeClass(this.disclosurePanelDefaults.openClass);\n\t        elem.addClass(this.disclosurePanelDefaults.closeClass);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'toggle',\n\t    value: function toggle() {\n\t      this.isOpen = !this.isOpen;\n\t      this.$scope.$apply();\n\t    }\n\t  }, {\n\t    key: 'isOpen',\n\t    get: function get() {\n\t      return this._isOpen;\n\t    },\n\t    set: function set(newIsOpen) {\n\t      this._isOpen = newIsOpen;\n\t    }\n\t  }]);\n\n\t  return DisclosurePanelController;\n\t})();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\texports.DisclosurePanelTogglerDirective = DisclosurePanelTogglerDirective;\n\n\tfunction DisclosurePanelTogglerDirective($log) {\n\t  'ngInject';\n\n\t  var directive = {\n\t    restrict: 'A',\n\t    link: link,\n\t    require: '^dpContainer'\n\t  };\n\n\t  return directive;\n\n\t  function link(scope, element, attrs, disclosurePanelController) {\n\t    element.on('click', clickHandler);\n\n\t    scope.$on('destroy', destroy);\n\t    disclosurePanelController.updateClass(element);\n\n\t    function clickHandler() {\n\t      disclosurePanelController.toggle();\n\t      disclosurePanelController.updateClass(element);\n\t    }\n\n\t    function destroy() {\n\t      $log.debug(\"destroying disclosure panel toggler\");\n\t      element.off('click', clickHandler);\n\t    }\n\t  }\n\t}\n\tDisclosurePanelTogglerDirective.$inject = [\"$log\"];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\texports.DisclosurePanelRevealOnOpenDirective = DisclosurePanelRevealOnOpenDirective;\n\n\tfunction DisclosurePanelRevealOnOpenDirective(disclosurePanelRevealLinkGeneratorService) {\n\t  'ngInject';\n\n\t  var directive = {\n\t    restrict: 'A',\n\t    link: disclosurePanelRevealLinkGeneratorService.generateLinkFunction(function (value) {\n\t      return value;\n\t    }, 'dpRevealOnOpen'),\n\t    scope: true,\n\t    transclude: 'element',\n\t    require: '^dpContainer'\n\t  };\n\n\t  return directive;\n\t}\n\tDisclosurePanelRevealOnOpenDirective.$inject = [\"disclosurePanelRevealLinkGeneratorService\"];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\texports.DisclosurePanelRevealOnCloseDirective = DisclosurePanelRevealOnCloseDirective;\n\n\tfunction DisclosurePanelRevealOnCloseDirective(disclosurePanelRevealLinkGeneratorService) {\n\t  'ngInject';\n\n\t  var directive = {\n\t    restrict: 'A',\n\t    link: disclosurePanelRevealLinkGeneratorService.generateLinkFunction(function (value) {\n\t      return !value;\n\t    }, 'dpRevealOnClose'),\n\t    scope: true,\n\t    transclude: 'element',\n\t    require: '^dpContainer'\n\t  };\n\n\t  return directive;\n\t}\n\tDisclosurePanelRevealOnCloseDirective.$inject = [\"disclosurePanelRevealLinkGeneratorService\"];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t// I shamelessly copied this code from ngIf.\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\texports.disclosurePanelRevealLinkGeneratorService = disclosurePanelRevealLinkGeneratorService;\n\n\tfunction disclosurePanelRevealLinkGeneratorService($animate) {\n\t  'ngInject';\n\t  return {\n\t    generateLinkFunction: generateLinkFunction\n\t  };\n\n\t  function generateLinkFunction(conditionToDisplay, directiveName) {\n\t    return link;\n\n\t    function link(scope, $element, $attr, disclosurePanelContainerCtrl, $transclude) {\n\t      var block = undefined;\n\t      var childScope = undefined;\n\t      var previousElements = undefined;\n\t      scope.disclosurePanelCtrl = disclosurePanelContainerCtrl;\n\n\t      scope.$watch('disclosurePanelCtrl.isOpen', watchActionGeneratorForDisclosurePanelReveal());\n\n\t      function watchActionGeneratorForDisclosurePanelReveal() {\n\t        return watchAction;\n\n\t        function watchAction(value) {\n\t          if (conditionToDisplay(value)) {\n\t            if (!childScope) {\n\t              $transclude(function (clone, newScope) {\n\t                childScope = newScope;\n\t                clone[clone.length++] = document.createComment(' end ' + directiveName);\n\t                // Note: We only need the first/last node of the cloned nodes.\n\t                // However, we need to keep the reference to the jqlite wrapper as it might be changed later\n\t                // by a directive with templateUrl when its template arrives.\n\t                block = {\n\t                  clone: clone\n\t                };\n\t                $animate.enter(clone, $element.parent(), $element);\n\t              });\n\t            }\n\t          } else {\n\t            if (previousElements) {\n\t              previousElements.remove();\n\t              previousElements = null;\n\t            }\n\t            if (childScope) {\n\t              childScope.$destroy();\n\t              childScope = null;\n\t            }\n\t            if (block) {\n\t              previousElements = getBlockNodes(block.clone);\n\t              $animate.leave(previousElements).then(function () {\n\t                previousElements = null;\n\t              });\n\t              block = null;\n\t            }\n\t          }\n\t        }\n\t      }\n\n\t      function getBlockNodes(nodes) {\n\t        var node = nodes[0];\n\t        var endNode = nodes[nodes.length - 1];\n\t        var blockNodes = undefined;\n\n\t        for (var i = 1; node !== endNode && (node = node.nextSibling); i++) {\n\t          if (blockNodes || nodes[i] !== node) {\n\t            if (!blockNodes) {\n\t              blockNodes = [].slice.call(nodes, 0, i);\n\t            }\n\t            blockNodes.push(node);\n\t          }\n\t        }\n\n\t        return blockNodes || nodes;\n\t      }\n\t    }\n\t  }\n\t}\n\tdisclosurePanelRevealLinkGeneratorService.$inject = [\"$animate\"];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\texports.DisclosurePanelDefaultsProvider = DisclosurePanelDefaultsProvider;\n\n\tfunction DisclosurePanelDefaultsProvider() {\n\t    'ngInject';\n\t    var defaults = { 'openClass': 'dp-open', 'closeClass': 'dp-close' };\n\t    this.overrideDefaults = overrideDefaults;\n\n\t    this.$get = function getDefaults() {\n\t        return defaults;\n\t    };\n\n\t    function overrideDefaults(overrides) {\n\t        defaults = angular.extend(defaults, overrides);\n\t    }\n\t}\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\texports.DisclosurePanelOnOpenClassDirective = DisclosurePanelOnOpenClassDirective;\n\n\tfunction DisclosurePanelOnOpenClassDirective() {\n\t  'ngInject';\n\n\t  var directive = {\n\t    restrict: 'A',\n\t    link: link,\n\t    scope: {\n\t      'dpOnOpenClass': '@'\n\t    },\n\t    require: '^dpContainer'\n\t  };\n\n\t  return directive;\n\n\t  function link(scope, element, attrs, disclosurePanelContainerCtrl) {\n\t    scope.disclosurePanelCtrl = disclosurePanelContainerCtrl;\n\n\t    scope.$watch('disclosurePanelCtrl.isOpen', watch);\n\n\t    function watch(value) {\n\t      if (value) {\n\t        element.addClass(scope.dpOnOpenClass);\n\t      } else {\n\t        element.removeClass(scope.dpOnOpenClass);\n\t      }\n\t    }\n\t  }\n\t}\n\n/***/ }\n/******/ ]);"],"sourceRoot":"/source/"}